# -*- coding: utf-8 -*-
"""projeto-arquitetura-api.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Z3OGca9XhrkjZZSu_OmpqevVp7PrpaTN
"""

# INSTALANDO AS BIBLIOTECAS NO AMBIENTE
# !pip install "fastapi[all]"
# !pip install motor

# IMPORTANDO AS BIBLIOTECAS
from fastapi import FastAPI, Body
from fastapi.encoders import *
from pydantic import BaseModel, Field
import motor.motor_asyncio

# INCIALIZANDO APLICATIVO
app = FastAPI()

# DEFININDO O ESQUEMA DE CATEGORIA
class Categoria(BaseModel):
    categoria: str = Field(...)

# DEFININDO O ESQUEMA DE USUÁRIO INTERNO
class UsuarioInterno(BaseModel):
    nomeAnunciante: str = Field(...)
    emailAnunciante: str = Field(...)
    telefoneAnunciante: str = Field(...)
    senhaAnunciante: str = Field(...)

# DEFININDO O ESQUEMA DE ANUNCIO
class Anuncio(BaseModel):
    tituloProduto: str = Field(...)
    descricaoProduto: str = Field(...)
    localidadeProduto: str = Field(...)
    valorProduto: float = Field(...)
    imagemProduto: str = Field(...)
    categoriaAnuncio: Categoria = Field(...)
    usuarioInterno: UsuarioInterno = Field(...)

# ENDPOINTS DE USUARIOS

usuarios = []

@app.post("/usuarios")
async def adicionar_usuarios(usuario: UsuarioInterno = Body(...)):
    usuarios.append(usuario)

@app.get("/usuarios/{nomeAnunciante}")
async def listar_usuarios(nomeAnunciante: str):
    for user in usuarios:
        if user.nomeAnunciante == nomeAnunciante:
            return user

@app.put("/usuarios/{nomeAnunciante}")
async def modificar_usuarios(nomeAnunciante: str, usuario: UsuarioInterno = Body(...)):
    indice_usuario = -1
    
    for user in usuarios:
        if user.nomeAnunciante == nomeAnunciante:
            indice_usuario = usuarios.index(user)

    if indice_usuario >= 0:
        usuarios[indice_usuario] = usuario

@app.delete("usuarios/{nomeAnunciante}")
async def deletar_usuarios(nomeAnunciante: str):
    indice_usuario = -1

    for user in usuarios:
        if user.nomeAnunciante == nomeAnunciante:
            usuarios.remove(user)
            return

# ENDPOINTS DE ANUNCIOS

anuncios = []

@app.post("/anuncios")
async def adicionar_anuncios(anuncio: Anuncio = Body(...)):
    anuncios.append(anuncio)

@app.get("/anuncios")
async def listar_anuncios():
    return anuncios